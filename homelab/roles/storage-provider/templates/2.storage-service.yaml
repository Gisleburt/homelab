---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-storage
  namespace: storage
spec:
  storageClassName: local-storage
  capacity:
    storage: 930Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  local:
    path: /mnt/usb-device
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: storage-provider
              operator: In
              values:
                - "930Gi"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: local-storage
  namespace: storage
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 930Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-server-nfs
  namespace: storage
  labels:
    role: local-server-nfs
spec:
  replicas: 1
  selector:
    matchLabels:
      name: local-server-nfs
  template:
    metadata:
      labels:
        name: local-server-nfs
        role: local-server-nfs
    spec:
      nodeSelector:
        storage-provider: "930Gi"
      containers:
        - name: nfs-server
          image: itsthenetwork/nfs-server-alpine:11-arm
          env:
            - name: SHARED_DIRECTORY
              value: /exports
          ports:
            - name: nfs
              containerPort: 2049
          securityContext:
            capabilities:
              add: ["SYS_ADMIN", "SETPCAP"]
          volumeMounts:
            - mountPath: /exports
              name: local-storage
      volumes:
        - name: local-storage
          persistentVolumeClaim:
            claimName: local-storage

---
kind: Service
apiVersion: v1
metadata:
  name: local-server-nfs
  namespace: storage
spec:
  clusterIP: 10.43.20.49 # Unfortunately Kubernetes doesn't look at KubeDNS when setting up NFS volumes so we have to specify it here
  ports:
    - name: nfs
      port: 2049
  selector:
    role: local-server-nfs
