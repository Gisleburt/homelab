---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole-dnsmasq-config
  namespace: dns
data:
  # Very annoyingly you can't round-robin wildcards
  50-custom-dns.conf: |-
    address=/dni.sh/10.4.0.100

---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: pihole
  name: pihole
  namespace: dns
spec:
  replicas: 1 # temp
#  replicas: 2 # because its using php, we'd need to put $_SESSION into a shared store like REDIS
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: pihole
  template:
    metadata:
      labels:
        k8s-app: pihole
    spec:
      initContainers:
        - name: copy-pihole-dnsmasq-config
          image: alpine:latest
          command: [ "sh", "-c", "cp -R --dereference /source/* /destination" ]
          volumeMounts:
            - mountPath: /source
              name: pihole-dnsmasq-config
            - mountPath: /destination
              name: pihole-dnsmasq
      containers:
        - name: pihole
          image: pihole/pihole:latest
          ports:
            - name: interface
              containerPort: 80
              protocol: TCP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP
          env:
            - name: TZ
              value: Europe/London
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pihole-password
                  key: password
                  optional: false
            - name: PIHOLE_DNS_
              value: 1.1.1.1;1.0.0.1;208.67.222.222;8.8.8.8;8.8.4.4
            - name: PIHOLE_DOMAIN
              value: pihole.dni.sh
          volumeMounts:
            - mountPath: /etc/pihole
              name: pihole
            - mountPath: /etc/dnsmasq.d
              name: pihole-dnsmasq
#        - name: unbound
#          image: mvance/unbound:latest
#          ports:
#            - name: dns-tcp
#              containerPort: 53
#              protocol: TCP
#            - name: dns-udp
#              containerPort: 53
#              protocol: UDP
      volumes:
        - name: pihole
          persistentVolumeClaim:
            claimName: pihole
        - name: pihole-dnsmasq
          persistentVolumeClaim:
            claimName: pihole-dnsmasq
        - name: pihole-dnsmasq-config
          configMap:
            name: pihole-dnsmasq-config

---
kind: Service
apiVersion: v1
metadata:
  name: pihole-interface
  namespace: dns
spec:
  type: LoadBalancer
  selector:
    k8s-app: pihole
  ports:
    - name: interface
      port: 80
      protocol: TCP

---
kind: Service
apiVersion: v1
metadata:
  name: pihole-dns-udp
  namespace: dns
  annotations:
    metallb.universe.tf/allow-shared-ip: shared
spec:
  type: LoadBalancer
  loadBalancerIP: 10.4.16.1 # This needs to be set, everything else we can do dynamically
  selector:
    k8s-app: pihole
  ports:
    - name: dns
      port: 53
      protocol: UDP

---
kind: Service
apiVersion: v1
metadata:
  name: pihole-dns-tcp
  namespace: dns
  annotations:
    metallb.universe.tf/allow-shared-ip: shared
spec:
  type: LoadBalancer
  loadBalancerIP: 10.4.16.1 # This needs to be set, everything else we can do dynamically
  selector:
    k8s-app: pihole
  ports:
    - name: dns
      port: 53
      protocol: TCP

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: pihole-interface
  namespace: dns
  annotations:
    # add an annotation indicating the issuer to use.
    cert-manager.io/cluster-issuer: cloudflare-issuer-dni-sh
spec:
  rules:
    - host: pihole.dni.sh
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: pihole-interface
                port:
                  number: 80
  tls:
    - hosts:
        - pihole.dni.sh
      secretName: pihole-dni-sh-certificate
